name: MongoDB Local
description: |
  # MongoDB Local MCP Server

  A Model Context Protocol server for interacting with MongoDB Databases.

  <a name="getting-started"></a>

  ## üöÄ Prerequisites

  - **MongoDB Connection String Required**: The server requires a valid connection string to start.
    - Works with any MongoDB instance (local, cloud, or self-hosted).
    - MongoDB Atlas users can use this server or the specialized *MongoDB Atlas MCP Server*.

  ## üõ†Ô∏è Supported Tools

  ### Tool List

  #### MongoDB Database Tools

  - `connect` - Connect to a MongoDB instance
  - `find` - Run a find query against a MongoDB collection
  - `aggregate` - Run an aggregation against a MongoDB collection
  - `count` - Get the number of documents in a MongoDB collection
  - `insert-one` - Insert a single document into a MongoDB collection
  - `insert-many` - Insert multiple documents into a MongoDB collection
  - `create-index` - Create an index for a MongoDB collection
  - `update-one` - Update a single document in a MongoDB collection
  - `update-many` - Update multiple documents in a MongoDB collection
  - `rename-collection` - Rename a MongoDB collection
  - `delete-one` - Delete a single document from a MongoDB collection
  - `delete-many` - Delete multiple documents from a MongoDB collection
  - `drop-collection` - Remove a collection from a MongoDB database
  - `drop-database` - Remove a MongoDB database
  - `list-databases` - List all databases for a MongoDB connection
  - `list-collections` - List all collections for a given database
  - `collection-indexes` - Describe the indexes for a collection
  - `collection-schema` - Describe the schema for a collection
  - `collection-storage-size` - Get the size of a collection in MB
  - `db-stats` - Return statistics about a MongoDB database

  Operation types:

  - `create` - Tools that create resources, such as create cluster, insert document, etc.
  - `update` - Tools that update resources, such as update document, rename collection, etc.
  - `delete` - Tools that delete resources, such as delete document, drop collection, etc.
  - `read` - Tools that read resources, such as find, aggregate, list clusters, etc.
  - `metadata` - Tools that read metadata, such as list databases, list collections, collection schema, etc.
  - `connect` - Tools that allow you to connect or switch the connection to a MongoDB instance. If this is disabled, you will need to provide a connection string through the config when starting the server.

metadata:
  categories: Databases,Data & Analytics
icon: https://avatars.githubusercontent.com/u/45120?s=48&v=4
repoURL: https://github.com/mongodb-js/mongodb-mcp-server
env:
  - key: MDB_MCP_CONNECTION_STRING
    name: MongoDB Connection String
    required: true
    sensitive: false
    description: The connection string for your MongoDB database.
  # - key: MDB_MCP_READ_ONLY ## TODO: need dynamic args support, see issue https://github.com/obot-platform/obot/issues/3619 feature request 1
  #   name: MongoDB Read Only
  #   required: false
  #   sensitive: false
  #   description: Whether to run the MongoDB MCP server in read-only mode, default is false.
args:
  - -y
  - mongodb-mcp-server
  - --connectionString
  - ${MDB_MCP_CONNECTION_STRING}
  - --readOnly
command: npx
toolPreview:
  - name: connect
    description: Connect to a MongoDB instance
    params:
      connectionString: MongoDB connection string
  - name: list-collections
    description: List all collections for a given database
    params:
      database: Database name
  - name: list-databases
    description: List all databases for a MongoDB connection
  - name: collection-indexes
    description: Describe the indexes for a collection
    params:
      collection: Collection name
      database: Database name
  - name: create-index
    description: Create an index for a collection
    params:
      collection: Collection name
      database: Database name
      keys: Index keys specification object
      name: Optional index name
  - name: collection-schema
    description: Describe the schema for a collection
    params:
      collection: Collection name
      database: Database name
  - name: find
    description: Run a find query against a MongoDB collection
    params:
      collection: Collection name
      database: Database name
      filter: Optional query filter object
      limit: Optional maximum number of documents to return
      projection: Optional projection object
      sort: Optional sort specification object
  - name: insert-many
    description: Insert an array of documents into a MongoDB collection
    params:
      collection: Collection name
      database: Database name
      documents: Array of documents to insert
  - name: delete-many
    description: Removes all documents that match the filter from a MongoDB collection
    params:
      collection: Collection name
      database: Database name
      filter: Optional filter object
  - name: collection-storage-size
    description: Gets the size of the collection
    params:
      collection: Collection name
      database: Database name
  - name: count
    description: Gets the number of documents in a MongoDB collection using db.collection.count() and query as an optional filter parameter
    params:
      collection: Collection name
      database: Database name
      query: Optional filter/query object
  - name: db-stats
    description: Returns statistics that reflect the use state of a single database
    params:
      database: Database name
  - name: aggregate
    description: Run an aggregation against a MongoDB collection
    params:
      collection: Collection name
      database: Database name
      pipeline: Array of aggregation pipeline stages
  - name: update-many
    description: Updates all documents that match the specified filter for a collection
    params:
      collection: Collection name
      database: Database name
      update: Update specification object
      filter: Optional filter object
      upsert: Optional boolean to insert if no match found
  - name: rename-collection
    description: Renames a collection in a MongoDB database
    params:
      collection: Collection name
      database: Database name
      newName: New collection name
      dropTarget: Optional boolean to drop target collection if it exists
  - name: drop-database
    description: Removes the specified database, deleting the associated data files
    params:
      database: Database name
  - name: drop-collection
    description: Removes a collection or view from the database. The method also removes any indexes associated with the dropped collection.
    params:
      collection: Collection name
      database: Database name
  - name: explain
    description: Returns statistics describing the execution of the winning plan chosen by the query optimizer for the evaluated method
    params:
      collection: Collection name
      database: Database name
      method: Array specifying the method and arguments to explain
  - name: create-collection
    description: Creates a new collection in a database. If the database doesn't exist, it will be created automatically.
    params:
      collection: Collection name
      database: Database name
  - name: mongodb-logs
    description: Returns the most recent logged mongod events
    params:
      limit: Optional maximum number of log entries to return
      type: Optional log type filter

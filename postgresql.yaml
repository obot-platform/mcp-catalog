name: PostgreSQL
description: |
  [![License: MIT](https://img.shields.io/badge/License-MIT-blue.svg)](https://opensource.org/licenses/MIT)
  [![PyPI - Version](https://img.shields.io/pypi/v/postgres-mcp)](https://pypi.org/project/postgres-mcp/)
  [![Contributors](https://img.shields.io/github/contributors/crystaldba/postgres-mcp)](https://github.com/crystaldba/postgres-mcp/graphs/contributors)

  A Model Context Protocol (MCP) server designed for deep SQL performance analysis and optimization. It delivers advanced index tuning, workload-aware query insights, safe execution controls, and schema-aware SQL generationâ€”backed by comprehensive database health diagnostics and EXPLAIN plan simulation.

  ## Features
  - **Database Health Analysis**: Comprehensive health checks including index health, connection utilization, buffer cache analysis, vacuum health, and replication lag monitoring
  - **Advanced Index Tuning**: Industrial-strength algorithms that explore thousands of possible indexes using proven optimization techniques
  - **Query Performance Optimization**: EXPLAIN plan analysis and hypothetical index simulation for performance validation
  - **Schema Intelligence**: Context-aware SQL generation based on detailed database schema understanding
  - **Safe SQL Execution**: Configurable access control with read-only mode and SQL parsing for both development and production environments
  - **Workload Analysis**: Identify resource-intensive queries and get targeted optimization recommendations

  ## What you'll need to connect

  **Required:**
  - **Database URI**: PostgreSQL connection string (e.g., `postgresql://username:password@localhost:5432/dbname`)

  ## Example Usage

  - "Check the health of my database and identify any issues"
  - "What are the slowest queries in my database? And how can I speed them up?"
  - "Analyze my database workload and suggest indexes to improve performance"
  - "Help me optimize this query: SELECT * FROM orders JOIN customers ON orders.customer_id = customers.id WHERE orders.created_at > '2023-01-01'"

metadata:
  categories: Databases
icon: https://avatars.githubusercontent.com/u/177543?s=48&v=4
repoURL: https://github.com/crystaldba/postgres-mcp
env:
  - key: DATABASE_URI
    name: Database URI
    required: true
    sensitive: false
    description: The connection string for your Postgres database; e.g. "postgresql://username:password@localhost:5432/dbname"

toolPreview:
  - name: list_schemas
    description: Lists all database schemas available in the PostgreSQL instance

  - name: list_objects
    description: Lists database objects (tables, views, sequences, extensions) within a specified schema

  - name: get_object_details
    description: Provides detailed information about a specific database object including columns, constraints, and indexes

  - name: execute_sql
    description: Executes SQL statements with read-only limitations in restricted mode

  - name: explain_query
    description: Shows execution plan for SQL queries and can simulate hypothetical indexes

  - name: get_top_queries
    description: Reports slowest SQL queries based on execution statistics from pg_stat_statements

  - name: analyze_workload_indexes
    description: Analyzes database workload to identify resource-intensive queries and recommends optimal indexes

  - name: analyze_query_indexes
    description: Analyzes specific SQL queries (up to 10) and recommends optimal indexes for them

  - name: analyze_db_health
    description: Performs comprehensive health checks including cache hit rates, connections, indexes, and vacuum status

runtime: uvx
uvxConfig:
  package: 'postgres-mcp'
  args:
    - --access-mode=unrestricted

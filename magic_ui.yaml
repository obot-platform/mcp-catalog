name: Magic UI
description: |
  # 21st.dev Magic AI Agent

  ![MCP Banner](https://21st.dev/magic-agent-og-image.png)

  Magic Component Platform (MCP) is a powerful AI-driven tool that helps developers create beautiful, modern UI components instantly through natural language descriptions. It integrates seamlessly with popular IDEs and provides a streamlined workflow for UI development.

  ## üåü Features

  - **AI-Powered UI Generation**: Create UI components by describing them in natural language
  - **Modern Component Library**: Access to a vast collection of pre-built, customizable components inspired by [21st.dev](https://21st.dev)
  - **Real-time Preview**: Instantly see your components as you create them
  - **TypeScript Support**: Full TypeScript support for type-safe development
  - **SVGL Integration**: Access to a vast collection of professional brand assets and logos
  - **Component Enhancement**: Improve existing components with advanced features and animations (Coming Soon)

  ## üöÄ Getting Started

  **Generate API Key**:
  - Visit [21st.dev Magic Console](https://21st.dev/magic/console)
  - Generate a new API key

  ## üéØ How It Works

  1. **Tell Agent What You Need**

    - In your AI Agent's chat, just type `/ui` and describe the component you're looking for
    - Example: `/ui create a modern navigation bar with responsive design`

  2. **Let Magic Create It**

    - Your IDE prompts you to use Magic
    - Magic instantly builds a polished UI component
    - Components are inspired by 21st.dev's library

  3. **Seamless Integration**
    - Components are automatically added to your project
    - Start using your new UI components right away
    - All components are fully customizable

  ## ‚ùì FAQ

  ### How does Magic AI Agent handle my codebase?

  Magic AI Agent only writes or modifies files related to the components it generates. It follows your project's code style and structure, and integrates seamlessly with your existing codebase without affecting other parts of your application.

  ### Can I customize the generated components?

  Yes! All generated components are fully editable and come with well-structured code. You can modify the styling, functionality, and behavior just like any other React component in your codebase.

  ### What happens if I run out of generations?

  If you exceed your monthly generation limit, you'll be prompted to upgrade your plan. You can upgrade at any time to continue generating components. Your existing components will remain fully functional.

  ### How soon do new components get added to 21st.dev's library?

  Authors can publish components to 21st.dev at any time, and Magic Agent will have immediate access to them. This means you'll always have access to the latest components and design patterns from the community.

  ### Is there a limit to component complexity?

  Magic AI Agent can handle components of varying complexity, from simple buttons to complex interactive forms. However, for best results, we recommend breaking down very complex UIs into smaller, manageable components.

  ## ‚ö†Ô∏è Beta Notice

  Magic Agent is currently in beta. All features are free during this period. We appreciate your feedback and patience as we continue to improve the platform.

metadata:
  categories: Developer Tools, UI & Design
icon: https://avatars.githubusercontent.com/u/199367026?s=200&v=4
repoURL: https://github.com/21st-dev/magic-mcp
env:
  - key: API_KEY  
    name: Magic API Key
    required: true
    sensitive: true
    description: Your Magic API key.
toolPreview:
  - name: 21st_magic_component_builder
    description: Use this tool when the user requests a new UI component‚Äîe.g., mentions /ui, /21 /21st, or asks for a button, input, dialog, table, form, banner, card, or other React component.
    params:
      absolutePathToCurrentFile: Absolute path to the current file to which we want to apply changes
      absolutePathToProjectDirectory: Absolute path to the project root directory
      message: Full users message
      searchQuery: Generate a search query for 21st.dev (library for searching UI components) to find a UI component that matches the user's message. Must be a two-four words max or phrase
      standaloneRequestQuery: You need to formulate what component user wants to create, based on his message, possbile chat histroy and a place where he makes the request.Extract additional context about what should be done to create a ui component/page based on the user's message, search query, and conversation history, files. Don't halucinate and be on point.
  - name: logo_search
    description: Search and return logos in specified format (JSX, TSX, SVG). Supports single and multiple logo searches with category filtering.
    params:
      format: Output format (JSX, TSX, or SVG)
      queries: List of company names to search for logos
  - name: 21st_magic_component_inspiration
    description: Use this tool when the user wants to see component, get inspiration, or /21st fetch data and previews from 21st.dev. This tool returns the JSON data of matching components without generating new code.
    params:
      message: Full users message
      searchQuery: Search query for 21st.dev (library for searching UI components) to find a UI component that matches the user's message. Must be a two-four words max or phrase
  - name: 21st_magic_component_refiner
    description: Use this tool when the user requests to re-design/refine/improve current UI component with /ui or /21 commands, or when context is about improving, or refining UI for a React component or molecule (NOT for big pages).
    params:
      absolutePathToRefiningFile: Absolute path to the file that needs to be refined
      context: Extract the specific UI elements and aspects that need improvement based on user messages, code, and conversation history. Identify exactly which components (buttons, forms, modals, etc.) the user is referring to and what aspects (styling, layout, responsiveness, etc.) they want to enhance.
      userMessage: Full user's message about UI refinement

runtime: npx
npxConfig:
  package: '@21st-dev/magic@latest'

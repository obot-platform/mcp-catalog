name: Playwright
description: |
  # Playwright MCP

  A Model Context Protocol (MCP) server that provides browser automation capabilities using [Playwright](https://playwright.dev). This server enables LLMs to interact with web pages through structured accessibility snapshots, bypassing the need for screenshots or visually-tuned models.

  ### Key Features

  - **Fast and lightweight**. Uses Playwright's accessibility tree, not pixel-based input.
  - **LLM-friendly**. No vision models needed, operates purely on structured data.
  - **Deterministic tool application**. Avoids ambiguity common with screenshot-based approaches.

  ### Getting started

  Simply Click `Connect To Server` to get started!

  ### Tools

  <!--- Tools generated by update-readme.js -->

  <details>
  <summary><b>Core automation</b></summary>

  <!-- NOTE: This has been generated via update-readme.js -->

  - **browser_click**
    - Title: Click
    - Description: Perform click on a web page
    - Parameters:
      - `element` (string): Human-readable element description used to obtain permission to interact with the element
      - `ref` (string): Exact target element reference from the page snapshot
      - `doubleClick` (boolean, optional): Whether to perform a double click instead of a single click
      - `button` (string, optional): Button to click, defaults to left
    - Read-only -  **false**

  <!-- NOTE: This has been generated via update-readme.js -->

  - **browser_close**
    - Title: Close browser
    - Description: Close the page
    - Parameters: None
    - Read-only -  **true**

  <!-- NOTE: This has been generated via update-readme.js -->

  - **browser_console_messages**
    - Title: Get console messages
    - Description: Returns all console messages
    - Parameters: None
    - Read-only -  **true**

  <!-- NOTE: This has been generated via update-readme.js -->

  - **browser_drag**
    - Title: Drag mouse
    - Description: Perform drag and drop between two elements
    - Parameters:
      - `startElement` (string): Human-readable source element description used to obtain the permission to interact with the element
      - `startRef` (string): Exact source element reference from the page snapshot
      - `endElement` (string): Human-readable target element description used to obtain the permission to interact with the element
      - `endRef` (string): Exact target element reference from the page snapshot
    - Read-only -  **false**

  <!-- NOTE: This has been generated via update-readme.js -->

  - **browser_evaluate**
    - Title: Evaluate JavaScript
    - Description: Evaluate JavaScript expression on page or element
    - Parameters:
      - `function` (string): () => { /* code */ } or (element) => { /* code */ } when element is provided
      - `element` (string, optional): Human-readable element description used to obtain permission to interact with the element
      - `ref` (string, optional): Exact target element reference from the page snapshot
    - Read-only -  **false**

  <!-- NOTE: This has been generated via update-readme.js -->

  - **browser_file_upload**
    - Title: Upload files
    - Description: Upload one or multiple files
    - Parameters:
      - `paths` (array): The absolute paths to the files to upload. Can be a single file or multiple files.
    - Read-only -  **false**

  <!-- NOTE: This has been generated via update-readme.js -->

  - **browser_handle_dialog**
    - Title: Handle a dialog
    - Description: Handle a dialog
    - Parameters:
      - `accept` (boolean): Whether to accept the dialog.
      - `promptText` (string, optional): The text of the prompt in case of a prompt dialog.
    - Read-only -  **false**

  <!-- NOTE: This has been generated via update-readme.js -->

  - **browser_hover**
    - Title: Hover mouse
    - Description: Hover over element on page
    - Parameters:
      - `element` (string): Human-readable element description used to obtain permission to interact with the element
      - `ref` (string): Exact target element reference from the page snapshot
    - Read-only -  **true**

  <!-- NOTE: This has been generated via update-readme.js -->

  - **browser_navigate**
    - Title: Navigate to a URL
    - Description: Navigate to a URL
    - Parameters:
      - `url` (string): The URL to navigate to
    - Read-only -  **false**

  <!-- NOTE: This has been generated via update-readme.js -->

  - **browser_navigate_back**
    - Title: Go back
    - Description: Go back to the previous page
    - Parameters: None
    - Read-only -  **true**

  <!-- NOTE: This has been generated via update-readme.js -->

  - **browser_navigate_forward**
    - Title: Go forward
    - Description: Go forward to the next page
    - Parameters: None
    - Read-only -  **true**

  <!-- NOTE: This has been generated via update-readme.js -->

  - **browser_network_requests**
    - Title: List network requests
    - Description: Returns all network requests since loading the page
    - Parameters: None
    - Read-only -  **true**

  <!-- NOTE: This has been generated via update-readme.js -->

  - **browser_press_key**
    - Title: Press a key
    - Description: Press a key on the keyboard
    - Parameters:
      - `key` (string): Name of the key to press or a character to generate, such as `ArrowLeft` or `a`
    - Read-only -  **false**

  <!-- NOTE: This has been generated via update-readme.js -->

  - **browser_resize**
    - Title: Resize browser window
    - Description: Resize the browser window
    - Parameters:
      - `width` (number): Width of the browser window
      - `height` (number): Height of the browser window
    - Read-only -  **true**

  <!-- NOTE: This has been generated via update-readme.js -->

  - **browser_select_option**
    - Title: Select option
    - Description: Select an option in a dropdown
    - Parameters:
      - `element` (string): Human-readable element description used to obtain permission to interact with the element
      - `ref` (string): Exact target element reference from the page snapshot
      - `values` (array): Array of values to select in the dropdown. This can be a single value or multiple values.
    - Read-only -  **false**

  <!-- NOTE: This has been generated via update-readme.js -->

  - **browser_snapshot**
    - Title: Page snapshot
    - Description: Capture accessibility snapshot of the current page, this is better than screenshot
    - Parameters: None
    - Read-only -  **true**

  <!-- NOTE: This has been generated via update-readme.js -->

  - **browser_take_screenshot**
    - Title: Take a screenshot
    - Description: Take a screenshot of the current page. You can't perform actions based on the screenshot, use browser_snapshot for actions.
    - Parameters:
      - `raw` (boolean, optional): Whether to return without compression (in PNG format). Default is false, which returns a JPEG image.
      - `filename` (string, optional): File name to save the screenshot to. Defaults to `page-{timestamp}.{png|jpeg}` if not specified.
      - `element` (string, optional): Human-readable element description used to obtain permission to screenshot the element. If not provided, the screenshot will be taken of viewport. If element is provided, ref must be provided too.
      - `ref` (string, optional): Exact target element reference from the page snapshot. If not provided, the screenshot will be taken of viewport. If ref is provided, element must be provided too.
      - `fullPage` (boolean, optional): When true, takes a screenshot of the full scrollable page, instead of the currently visible viewport. Cannot be used with element screenshots.
    - Read-only -  **true**

  <!-- NOTE: This has been generated via update-readme.js -->

  - **browser_type**
    - Title: Type text
    - Description: Type text into editable element
    - Parameters:
      - `element` (string): Human-readable element description used to obtain permission to interact with the element
      - `ref` (string): Exact target element reference from the page snapshot
      - `text` (string): Text to type into the element
      - `submit` (boolean, optional): Whether to submit entered text (press Enter after)
      - `slowly` (boolean, optional): Whether to type one character at a time. Useful for triggering key handlers in the page. By default entire text is filled in at once.
    - Read-only -  **false**

  <!-- NOTE: This has been generated via update-readme.js -->

  - **browser_wait_for**
    - Title: Wait for
    - Description: Wait for text to appear or disappear or a specified time to pass
    - Parameters:
      - `time` (number, optional): The time to wait in seconds
      - `text` (string, optional): The text to wait for
      - `textGone` (string, optional): The text to wait for to disappear
    - Read-only -  **true**

  </details>

  <details>
  <summary><b>Tab management</b></summary>

  <!-- NOTE: This has been generated via update-readme.js -->

  - **browser_tab_close**
    - Title: Close a tab
    - Description: Close a tab
    - Parameters:
      - `index` (number, optional): The index of the tab to close. Closes current tab if not provided.
    - Read-only -  **false**

  <!-- NOTE: This has been generated via update-readme.js -->

  - **browser_tab_list**
    - Title: List tabs
    - Description: List browser tabs
    - Parameters: None
    - Read-only -  **true**

  <!-- NOTE: This has been generated via update-readme.js -->

  - **browser_tab_new**
    - Title: Open a new tab
    - Description: Open a new tab
    - Parameters:
      - `url` (string, optional): The URL to navigate to in the new tab. If not provided, the new tab will be blank.
    - Read-only -  **true**

  <!-- NOTE: This has been generated via update-readme.js -->

  - **browser_tab_select**
    - Title: Select a tab
    - Description: Select a tab by index
    - Parameters:
      - `index` (number): The index of the tab to select
    - Read-only -  **true**

  </details>

  <details>
  <summary><b>Browser installation</b></summary>

  <!-- NOTE: This has been generated via update-readme.js -->

  - **browser_install**
    - Title: Install the browser specified in the config
    - Description: Install the browser specified in the config. Call this if you get an error about the browser not being installed.
    - Parameters: None
    - Read-only -  **false**

  </details>

  <details>
  <summary><b>Coordinate-based (opt-in via --caps=vision)</b></summary>

  <!-- NOTE: This has been generated via update-readme.js -->

  - **browser_mouse_click_xy**
    - Title: Click
    - Description: Click left mouse button at a given position
    - Parameters:
      - `element` (string): Human-readable element description used to obtain permission to interact with the element
      - `x` (number): X coordinate
      - `y` (number): Y coordinate
    - Read-only -  **false**

  <!-- NOTE: This has been generated via update-readme.js -->

  - **browser_mouse_drag_xy**
    - Title: Drag mouse
    - Description: Drag left mouse button to a given position
    - Parameters:
      - `element` (string): Human-readable element description used to obtain permission to interact with the element
      - `startX` (number): Start X coordinate
      - `startY` (number): Start Y coordinate
      - `endX` (number): End X coordinate
      - `endY` (number): End Y coordinate
    - Read-only -  **false**

  <!-- NOTE: This has been generated via update-readme.js -->

  - **browser_mouse_move_xy**
    - Title: Move mouse
    - Description: Move mouse to a given position
    - Parameters:
      - `element` (string): Human-readable element description used to obtain permission to interact with the element
      - `x` (number): X coordinate
      - `y` (number): Y coordinate
    - Read-only -  **true**

  </details>

  <details>
  <summary><b>PDF generation (opt-in via --caps=pdf)</b></summary>

  <!-- NOTE: This has been generated via update-readme.js -->

  - **browser_pdf_save**
    - Title: Save as PDF
    - Description: Save page as PDF
    - Parameters:
      - `filename` (string, optional): File name to save the pdf to. Defaults to `page-{timestamp}.pdf` if not specified.
    - Read-only -  **true**

  </details>


  <!--- End of tools generated section -->

metadata:
  categories: Automation & Browsers
  unsupportedTools: browser_snapshot,browser_take_screenshot,browser_screen_capture,browser_pdf_save,browser_install
icon: https://avatars.githubusercontent.com/u/6154722?v=4
repoURL: https://github.com/microsoft/playwright-mcp
env: []
args:
  - '@playwright/mcp@latest'
command: npx
toolPreview:
  - name: browser_navigate
    description: Navigate to a URL (Read-only - false)
    params:
      url: The URL to navigate to
  - name: browser_snapshot
    description: Capture accessibility snapshot of the current page, this is better than screenshot (Read-only - true)
  - name: browser_click
    description: Perform click on a web page (Read-only - false)
    params:
      element: Human-readable element description used to obtain permission to interact with the element
      ref: Exact target element reference from the page snapshot
      doubleClick: Whether to perform a double click instead of a single click
      button: Button to click, defaults to left
  - name: browser_type
    description: Type text into editable element (Read-only -  false)
    params:
      element: Human-readable element description used to obtain permission to interact with the element
      ref: Exact target element reference from the page snapshot
      text: Text to type into the element
      submit: Whether to submit entered text (press Enter after)
      slowly: Whether to type one character at a time
  - name: browser_take_screenshot
    description: Take a screenshot of the current page (Read-only -  true)
    params:
      raw: Whether to return without compression (in PNG format)
      filename: File name to save the screenshot to
      element: Human-readable element description for element screenshot
      ref: Exact target element reference from the page snapshot
      fullPage: Take screenshot of the full scrollable page
  - name: browser_evaluate
    description: Evaluate JavaScript expression on page or element (Read-only -  false)
    params:
      function: JavaScript function to execute
      element: Human-readable element description (optional)
      ref: Exact target element reference (optional)
  - name: browser_wait_for
    description: Wait for text to appear or disappear or a specified time to pass (Read-only -  true)
    params:
      time: The time to wait in seconds
      text: The text to wait for
      textGone: The text to wait for to disappear
  - name: browser_select_option
    description: Select an option in a dropdown (Read-only -  false)
    params:
      element: Human-readable element description
      ref: Exact target element reference from the page snapshot
      values: Array of values to select in the dropdown
  - name: browser_hover
    description: Hover over element on page (Read-only -  true)
    params:
      element: Human-readable element description
      ref: Exact target element reference from the page snapshot
  - name: browser_drag
    description: Perform drag and drop between two elements (Read-only -  false)
    params:
      startElement: Human-readable source element description
      startRef: Exact source element reference from the page snapshot
      endElement: Human-readable target element description
      endRef: Exact target element reference from the page snapshot
  - name: browser_file_upload
    description: Upload one or multiple files (Read-only -  false)
    params:
      paths: The absolute paths to the files to upload
  - name: browser_tab_new
    description: Open a new tab (Read-only -  true)
    params:
      url: The URL to navigate to in the new tab (optional)
  - name: browser_tab_list
    description: List browser tabs (Read-only -  true)
  - name: browser_tab_select
    description: Select a tab by index (Read-only -  true)
    params:
      index: The index of the tab to select
  - name: browser_network_requests
    description: Returns all network requests since loading the page (Read-only -  true)
  - name: browser_console_messages
    description: Returns all console messages (Read-only -  true)

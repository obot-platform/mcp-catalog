name: Atlassian
description: |
  A Model Context Protocol (MCP) server that bridges between your Atlassian Cloud site and compatible external tools. Once configured, it enables those tools to interact with Jira, Compass, and Confluence data in real-time.

  ## Features
  - **Smart Jira Management**: Create, update, search, and transition issues with AI assistance, manage comments, and track project metadata
  - **Intelligent Confluence Operations**: Search content using CQL, create and update pages, manage comments (both footer and inline), and navigate page hierarchies
  - **Compass Integration**: Query service dependencies and manage your service landscape
  - **Rovo Search & Fetch**: Powerful unified search across Jira and Confluence, fetch resources by ARI (Atlassian Resource Identifier)
  - **Advanced Filtering**: Use JQL for Jira issues and CQL for Confluence content with AI-powered natural language queries
  - **Zero Configuration**: OAuth flow handles authentication automatically - no API tokens or local setup needed
  - **Enterprise Ready**: Respects existing user permissions and access controls across all Atlassian products

  ## What you'll need to connect

  **No Setup Required**: Authentication is handled automatically through OAuth2 workflow.

  **Important for Admins**: To enable OAuth with Obot, your Atlassian admin must add the Obot callback URL domain:
  1. Go to [Atlassian Administration](https://admin.atlassian.com) and select your organization
  2. Navigate to **Apps > AI settings > Rovo MCP server**
  3. Add your Obot domain (e.g., `https://your-obot-domain/**`)

  ## Example Usage

  Ask your AI assistant to:

  - **Jira Management** - "Update Jira ticket PROJ-123 status to In Progress" or "Create a bug ticket from these error logs"
  - **Confluence Search** - "Find our OKR guide in Confluence and summarize it" or "Search for authentication documentation"
  - **Content Creation** - "Create a tech design doc for XYZ feature in the Engineering space"
  - **Issue Filtering** - "Show me all urgent bugs assigned to me from last week"
  - **Cross-Product Linking** - "Link Jira ticket ABC-456 to the Q4 Planning Confluence page"
  - **Compass Integration** - "What services depend on the api-gateway component?"

toolPreview:
- name: atlassianUserInfo
  description: Get current authenticated user information from Atlassian
- name: getAccessibleAtlassianResources
  description: Get list of accessible Atlassian Cloud sites and their IDs
- name: getConfluenceSpaces
  description: List all Confluence spaces with filtering and pagination options
  params:
    cloudId: Unique identifier for Atlassian Cloud instance (UUID or site URL)
    cursor: Pagination cursor for retrieving next page of results (optional)
    limit: "Maximum number of spaces to return (default: 25, max: 250) (optional)"
    ids: Filter by specific numerical space IDs (optional)
    keys: Filter by space keys (unique identifiers) (optional)
    type: "Filter by space type: global, collaboration, knowledge_base, personal (optional)"
    status: "Filter by space status: current, archived (optional)"
    labels: Filter by space labels (optional)
    favoritedBy: Filter spaces favorited by a specific user account ID (optional)
    sort: "Sort order: id, -id, key, -key, name, -name (optional)"
- name: getConfluencePage
  description: Get a specific Confluence page or live doc by ID with body content in Markdown
  params:
    cloudId: Unique identifier for Atlassian Cloud instance (UUID or site URL)
    pageId: The unique identifier of the page to retrieve
- name: getPagesInConfluenceSpace
  description: Get all pages within a specific Confluence space
  params:
    cloudId: Unique identifier for Atlassian Cloud instance (UUID or site URL)
    spaceId: The unique numerical identifier of the space
    cursor: Opaque cursor for pagination (optional)
    limit: "Maximum number of pages to return (default: 25, max: 250) (optional)"
    title: Filter pages by title (optional)
    status: "Filter by status: current, archived, deleted, trashed (optional)"
    depth: "Filter by depth: all, root (optional)"
    sort: "Sort by: id, -id, created-date, -created-date, modified-date, -modified-date, title, -title (optional)"
    subtype: "Filter by subtype: live (for live docs), page (for regular pages) (optional)"
- name: getConfluencePageFooterComments
  description: Get footer comments for a Confluence page
  params:
    cloudId: Unique identifier for Atlassian Cloud instance (UUID or site URL)
    pageId: The unique identifier of the page whose footer comments to retrieve
    cursor: Pagination cursor for retrieving next page of results (optional)
    limit: Maximum number of comments to return (optional)
    status: "Filter by status: current, archived, trashed, deleted, historical, draft (default: current) (optional)"
    sort: "Sort order: id, -id, created-date, -created-date (optional)"
- name: getConfluencePageInlineComments
  description: Get inline comments attached to specific text selections in a Confluence page
  params:
    cloudId: Unique identifier for Atlassian Cloud instance (UUID or site URL)
    pageId: The unique identifier of the page whose inline comments to retrieve
    cursor: Pagination cursor for retrieving next page of results (optional)
    limit: Maximum number of comments to return (optional)
    status: "Filter by status: current, archived, trashed, deleted, historical, draft (default: current) (optional)"
    resolutionStatus: "Filter by resolution: resolved, open, dangling, reopened (default: open) (optional)"
    sort: "Sort order: id, -id, created-date, -created-date (optional)"
- name: getConfluencePageDescendants
  description: Get all child pages (descendants) of a specific page in the hierarchy
  params:
    cloudId: Unique identifier for Atlassian Cloud instance (UUID or site URL)
    pageId: The unique identifier of the page whose descendants to retrieve
    cursor: Pagination cursor for retrieving next page of results (optional)
    limit: Maximum number of descendants to return (optional)
    depth: Maximum depth to traverse in the page hierarchy (optional)
- name: createConfluencePage
  description: Create a new page or live doc in Confluence with Markdown content
  params:
    cloudId: Unique identifier for Atlassian Cloud instance (UUID or site URL)
    spaceId: The unique numerical identifier of the space where the page will be created
    body: The content of the page in Markdown format
    title: The title of the new page (optional)
    parentId: The unique identifier of the parent page if creating a child page (optional)
    subtype: "Set to 'live' to create a live doc (optional)"
    isPrivate: The page will be private, only creator has view/edit permission (optional)
- name: updateConfluencePage
  description: Update an existing Confluence page or live doc
  params:
    cloudId: Unique identifier for Atlassian Cloud instance (UUID or site URL)
    pageId: The unique identifier of the existing page to update
    body: The content of the page in Markdown format
    title: The new title for the page (optional)
    status: "Status of the page to update: current, draft (default: current) (optional)"
    parentId: The unique identifier of the parent page if changing hierarchy (optional)
    spaceId: The unique numerical identifier of the space if moving the page (optional)
    versionMessage: Optional message describing the changes made in this version (optional)
- name: createConfluenceFooterComment
  description: Create a footer comment on a Confluence page or blog post
  params:
    cloudId: Unique identifier for Atlassian Cloud instance (UUID or site URL)
    body: The content of the comment in Markdown format
    pageId: The id of the page to add the comment to (optional)
    parentCommentId: The id of the parent comment to reply to (optional)
    attachmentId: The id of the attachment to add to the comment (optional)
    customContentId: The id of the custom content to add to the comment (optional)
- name: createConfluenceInlineComment
  description: Create an inline comment on specific text within a Confluence page
  params:
    cloudId: Unique identifier for Atlassian Cloud instance (UUID or site URL)
    body: The content of the comment in Markdown format
    pageId: The id of the page to add the comment to (optional)
    parentCommentId: The id of the parent comment to reply to (optional)
    inlineCommentProperties: Object with textSelection, textSelectionMatchCount, and textSelectionMatchIndex for top-level inline comments (optional)
- name: searchConfluenceUsingCql
  description: Search Confluence content using CQL (Confluence Query Language)
  params:
    cloudId: Unique identifier for Atlassian Cloud instance (UUID or site URL)
    cql: "The CQL query string (e.g., 'title ~ meeting AND type = page')"
    cursor: Pagination cursor for retrieving next page of results (optional)
    limit: "Maximum number of results to return (default: 25, max: 250) (optional)"
    cqlcontext: The context for the CQL query execution (optional)
    expand: Comma-separated list of properties to expand in the response (optional)
- name: getJiraIssue
  description: Get detailed information about a specific Jira issue by ID or key
  params:
    cloudId: Unique identifier for Atlassian Cloud instance (UUID or site URL)
    issueIdOrKey: Issue id (numerical) or key (e.g., PROJ-123)
    fields: Array of fields to return (optional)
    expand: Comma-separated list of properties to expand (optional)
    properties: Array of properties to return (optional)
- name: editJiraIssue
  description: Update fields of an existing Jira issue
  params:
    cloudId: Unique identifier for Atlassian Cloud instance (UUID or site URL)
    issueIdOrKey: Issue id (numerical) or key (e.g., PROJ-123)
    fields: Object containing field updates
- name: createJiraIssue
  description: Create a new Jira issue in a specified project
  params:
    cloudId: Unique identifier for Atlassian Cloud instance (UUID or site URL)
    projectKey: Project key (e.g., PROJ)
    issueTypeName: "Issue type name (e.g., Task, Bug, Story, Epic, Subtask)"
    summary: Issue title/summary
    description: Issue description in Markdown format (optional)
    assignee_account_id: Account ID of the assignee (optional)
    parent: Issue key or id of the parent issue for Subtask types (optional)
    additional_fields: Object with additional field values (optional)
- name: getTransitionsForJiraIssue
  description: Get available workflow transitions for a Jira issue
  params:
    cloudId: Unique identifier for Atlassian Cloud instance (UUID or site URL)
    issueIdOrKey: Issue id (numerical) or key (e.g., PROJ-123)
    expand: Comma-separated list of properties to expand (optional)
    transitionId: Filter to a specific transition ID (optional)
- name: transitionJiraIssue
  description: Transition a Jira issue to a new status
  params:
    cloudId: Unique identifier for Atlassian Cloud instance (UUID or site URL)
    issueIdOrKey: Issue id (numerical) or key (e.g., PROJ-123)
    transition: Object with id of the transition to perform
    fields: Object with field updates to apply during transition (optional)
    update: Object with operations to perform on fields (optional)
- name: lookupJiraAccountId
  description: Lookup Jira user account IDs by display name or email address
  params:
    cloudId: Unique identifier for Atlassian Cloud instance (UUID or site URL)
    searchString: Display name or email address to search for
- name: searchJiraIssuesUsingJql
  description: Search Jira issues using JQL (Jira Query Language)
  params:
    cloudId: Unique identifier for Atlassian Cloud instance (UUID or site URL)
    jql: "JQL query string (e.g., 'project = PROJ AND status = Open')"
    fields: "Array of fields to return (default: summary, description, status, issuetype, priority, created) (optional)"
    maxResults: "Maximum number of issues to return per page (default: 50, max: 100) (optional)"
    nextPageToken: Pagination token for fetching next page of results (optional)
- name: addCommentToJiraIssue
  description: Add a comment to an existing Jira issue
  params:
    cloudId: Unique identifier for Atlassian Cloud instance (UUID or site URL)
    issueIdOrKey: Issue id (numerical) or key (e.g., PROJ-123)
    commentBody: The content of the comment in Markdown format
    commentVisibility: Object with type (group/role) and value to restrict visibility (optional)
- name: getJiraIssueRemoteIssueLinks
  description: Get remote issue links (e.g., Confluence links) for a Jira issue
  params:
    cloudId: Unique identifier for Atlassian Cloud instance (UUID or site URL)
    issueIdOrKey: Issue id (numerical) or key (e.g., PROJ-123)
    globalId: Global ID of remote item to filter by (optional)
- name: getVisibleJiraProjects
  description: Get list of Jira projects visible to the current user
  params:
    cloudId: Unique identifier for Atlassian Cloud instance (UUID or site URL)
    action: "Filter by permission: view, browse, edit, create (default: create) (optional)"
    searchString: Filter projects by literal string matching key or name (optional)
    maxResults: "Maximum number of projects to return (default: 50, max: 50) (optional)"
    startAt: Index of the first item to return (page offset) (optional)
    expandIssueTypes: Include issue type information (default: true) (optional)
- name: getJiraProjectIssueTypesMetadata
  description: Get metadata for issue types available in a Jira project
  params:
    cloudId: Unique identifier for Atlassian Cloud instance (UUID or site URL)
    projectIdOrKey: Project id (numerical) or key (e.g., PROJ)
    maxResults: "Maximum number of issue types to return (default: 50, max: 200) (optional)"
    startAt: Index of the first item to return (page offset) (optional)
- name: getJiraIssueTypeMetaWithFields
  description: Get detailed field metadata for a specific issue type in a project
  params:
    cloudId: Unique identifier for Atlassian Cloud instance (UUID or site URL)
    projectIdOrKey: Project id (numerical) or key (e.g., PROJ)
    issueTypeId: The ID of the issue type
- name: search
  description: Unified Rovo search across Jira and Confluence content
  params:
    query: The search query to use for Rovo Search
- name: fetch
  description: Fetch a Jira issue or Confluence page by ARI (Atlassian Resource Identifier)
  params:
    id: "Atlassian Resource Identifier (ARI), e.g., 'ari:cloud:jira:cloudId:issue/10107'"

metadata:
  categories: Developer Tools
  allow-multiple: "true"
icon: https://avatars.githubusercontent.com/u/168166?s=200&v=4
repoURL: https://support.atlassian.com/atlassian-rovo-mcp-server/docs/getting-started-with-the-atlassian-remote-mcp-server/
runtime: remote
remoteConfig:
  fixedURL: https://mcp.atlassian.com/v1/sse


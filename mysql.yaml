name: MySQL
description: |
  ![Tests](https://github.com/designcomputer/mysql_mcp_server/actions/workflows/test.yml/badge.svg)
  ![PyPI - Downloads](https://img.shields.io/pypi/dm/mysql-mcp-server)
  [![smithery badge](https://smithery.ai/badge/mysql-mcp-server)](https://smithery.ai/server/mysql-mcp-server)
  [![MseeP.ai Security Assessment Badge](https://mseep.net/mseep-audited.png)](https://mseep.ai/app/designcomputer-mysql-mcp-server)
  # MySQL MCP Server
  A Model Context Protocol (MCP) implementation that enables secure interaction with MySQL databases. This server component facilitates communication between AI applications (hosts/clients) and MySQL databases, making database exploration and analysis safer and more structured through a controlled interface.

  > **Note**: MySQL MCP Server is not designed to be used as a standalone server, but rather as a communication protocol implementation between AI applications and MySQL databases.

  ## Features
  - List available MySQL tables as resources
  - Read table contents
  - Execute SQL queries with proper error handling
  - Secure database access through environment variables
  - Comprehensive logging

  ## Configuration
  Have the following information of your MySql database ready:
  ```
  MYSQL_HOST=<localhost>    # Database host
  MYSQL_PORT=<3306>         # Optional: Database port (defaults to 3306 if not specified)
  MYSQL_USER=<your_username>
  MYSQL_PASSWORD=<your_password>
  MYSQL_DATABASE=<your_database>
  ```

  ## Security Considerations
  - Never commit environment variables or credentials
  - Use a database user with minimal required permissions
  - Consider implementing query whitelisting for production use
  - Monitor and log all database operations

  ## Security Best Practices
  This MCP implementation requires database access to function. For security:
  1. **Create a dedicated MySQL user** with minimal permissions
  2. **Never use root credentials** or administrative accounts
  3. **Restrict database access** to only necessary operations
  4. **Enable logging** for audit purposes
  5. **Regular security reviews** of database access

  See [MySQL Security Configuration Guide](https://github.com/designcomputer/mysql_mcp_server/blob/main/SECURITY.md) for detailed instructions on:
  - Creating a restricted MySQL user
  - Setting appropriate permissions
  - Monitoring database access
  - Security best practices

  ⚠️ IMPORTANT: Always follow the principle of least privilege when configuring database access.

  ## License
  MIT License - see LICENSE file for details.

  ## Contributing
  1. Fork the repository
  2. Create your feature branch (`git checkout -b feature/amazing-feature`)
  3. Commit your changes (`git commit -m 'Add some amazing feature'`)
  4. Push to the branch (`git push origin feature/amazing-feature`)
  5. Open a Pull Request

metadata:
  categories: Databases,Data & Analytics,Verified
icon: https://avatars.githubusercontent.com/u/25017723?v=4
repoURL: https://github.com/designcomputer/mysql_mcp_server
env:
  - key: MYSQL_HOST
    name: MySQL Host
    required: true
    sensitive: false
    description: The hostname or IP address of your MySQL database.
  - key: MYSQL_PORT
    name: MySQL Port
    required: false
    sensitive: false
    description: The port number of your MySQL database. Defaults to 3306.
  - key: MYSQL_USER
    name: MySQL User
    required: true
    sensitive: false
    description: The username for your MySQL database.
  - key: MYSQL_PASSWORD
    name: MySQL Password
    required: true
    sensitive: true
    description: The password for your MySQL database.
  - key: MYSQL_DATABASE
    name: MySQL Database
    required: true
    sensitive: false
    description: The name of your MySQL database.
args:
  - --from
  - mysql-mcp-server
  - mysql_mcp_server
command: uvx

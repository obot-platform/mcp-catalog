name: Notion
description: |
  ![notion-mcp-sm](https://github.com/user-attachments/assets/6c07003c-8455-4636-b298-d60ffdf46cd8)

  A Model Context Protocol (MCP) server for the Notion API that enables AI agents to interact with Notion workspaces. This server provides comprehensive tools for managing pages, databases, blocks, comments, and users with optimized token consumption for AI applications.

  ## Features
  - **Page Management**: Create, retrieve, update, and archive pages with full content support
  - **Database Operations**: Query, create, and update databases with advanced filtering and sorting
  - **Block Manipulation**: Manage content blocks including text, media, and structured content
  - **Search & Discovery**: Powerful search capabilities across all workspace content
  - **Comment System**: Create and retrieve comments on pages and blocks
  - **User Management**: Access user information and workspace members

  ## What you'll need to connect

  **No Setup Required**: Authentication is handled automatically through OAuth2 workflow

  ## Example Usage

  - "Comment 'Hello MCP' on page 'Getting started'"
  - "Add a page titled 'Notion MCP' to page 'Development'"

metadata:
  categories: SaaS & API Integrations,Databases
icon: https://avatars.githubusercontent.com/u/4792552?v=4
repoURL: https://github.com/makenotion/notion-mcp-server
env:
  - key: NOTION_TOKEN
    name: Notion Token
    required: true
    sensitive: true
    description: Notion integration token (ntn_****).
toolPreview:
  - name: search
    description: Search within the Notion workspace.
    params:
      data_source_url: |-
        Optionally, provide the URL of a Data source to search. This will perform a semantic search over
        the pages in the Data Source.
      page_url: |-
        Optionally, provide the URL or ID of a page to search within. This will perform a semantic search
        over the content within and under the specified page.
      query: |-
        Semantic search query over your entire Notion workspace and connected sources
        (Slack, Google Drive, Github, Jira, Microsoft Teams, Sharepoint, OneDrive,
        or Linear).
      query_type: |-
        Specify type of the query as either "internal" or "user". Always include this input if performing
        "user" search.
      teamspace_id: |-
        Optionally, provide the ID of a teamspace to restrict search results to. This will perform a search
        over content within the specified teamspace only.
  - name: fetch
    description: Retrieves details about a Notion entity by its URL or ID.
    params:
      id: The ID or URL of the Notion page to fetch
  - name: notion-create-pages
    description: Creates one or more Notion pages with specified properties and content.
    params:
      pages: The pages to create.
      parent: The parent under which the new pages will be created. This can be a page or a database. If omitted, the new pages will be created as private pages at the workspace level.
  - name: notion-update-page
    description: Update a Notion page's properties or content.
    params:
      data: The data required for updating a page
  - name: notion-move-pages
    description: Move one or more Notion pages or databases to a new parent.
    params:
      new_parent: The new parent under which the pages will be moved. This can be a page or a database.
      page_or_database_ids: An array of up to 100 page or database IDs to move.
  - name: notion-duplicate-page
    description: Duplicate a Notion page. The page must be within the current workspace, and you must have permission to access it.
    params:
      page_id: The ID of the page to duplicate.
  - name: notion-create-database
    description: Creates a new Notion database with the specified properties.
    params:
      description: The description of the new database, as a rich text object.
      parent: The parent under which to create the new database. If omitted, the database will be created as a private page at the workspace level.
      properties: The property schema of the new database. Must at least have a title property.
      title: The title of the new database, as a rich text object.
  - name: notion-update-database
    description: Update a Notion database's properties, name, description, or other attributes.
    params:
      database_id: The ID of the database to update.
      description: The new description of the database, as a rich text object, if you want to update it.
      in_trash: Whether to move the database to the trash.
      is_inline: Whether the database should be displayed inline in the parent page, if you want to change this setting.
      properties: Updates to make to the database's schema. Use null to remove a property, or provide the `name` only to rename a property.
      title: The new title of the database, as a rich text object, if you want to update it.
  - name: notion-create-comment
    description: Add a comment to a page
    params:
      parent: The parent of the comment. This must be a page.
      rich_text: An array of rich text objects that represent the content of the comment.
  - name: notion-get-comments
    description: Get all comments of a page
    params:
      page_id: Identifier for a Notion page.
  - name: notion-get-users
    description: List all users
    params:
      query: ""
  - name: notion-get-self
    description: Retrieve your token's bot user
  - name: notion-get-user
    description: Retrieve a user
    params:
      path: ""

runtime: remote
remoteConfig:
  url: https://mcp.notion.com/mcp

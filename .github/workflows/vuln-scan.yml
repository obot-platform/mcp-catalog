name: Scan for LLM Vulnerabilities
permissions:
  id-token: write
  contents: read
  packages: read
  actions: read

on:
  workflow_dispatch:
  pull_request_target:
    types: [opened, synchronize, reopened]
  push:
    branches:
      - main
    tags:
      - "v*"

jobs:
  generate-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Checkout PR code if running for a PR
        if: ${{ github.event_name == 'pull_request_target' }}
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
          repository: ${{ github.event.pull_request.head.repo.full_name }}
          ref: ${{ github.event.pull_request.head.ref }}
      - name: Generate matrix from yaml
        id: set-matrix
        run: |
          matrix=$(for f in *.yaml; do
            yq eval 'has("toolPreview")' --exit-status "$f" >/dev/null 2>&1 \
              && echo "{\"filename\":\"$f\"}"
          done | jq -cs .)
          echo "matrix=$matrix" >> $GITHUB_OUTPUT

  repackage:
    needs: generate-matrix
    strategy:
      fail-fast: false
      matrix:
        include: ${{ fromJson(needs.generate-matrix.outputs.matrix) }}
    runs-on: depot-ubuntu-22.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Checkout PR code if running for a PR
        if: ${{ github.event_name == 'pull_request_target' }}
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
          repository: ${{ github.event.pull_request.head.repo.full_name }}
          ref: ${{ github.event.pull_request.head.ref }}

      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: "3.13"
          cache: "pip"
          cache-dependency-path: "scripts/mcp_tool_linter/requirements.txt"

      - name: Create venv and install deps
        run: |
          cd scripts/mcp_tool_linter
          python -m venv .venv
          . .venv/bin/activate
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Submit to llm for analysis
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          cd scripts/mcp_tool_linter
          . .venv/bin/activate
          python mcp_tool_linter.py ../../${{ matrix.filename }}

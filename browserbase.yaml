name: Browserbase
description: |
  # Browserbase MCP Server

  [The Model Context Protocol (MCP)](https://modelcontextprotocol.io/introduction) is an open protocol that enables seamless integration between LLM applications and external data sources and tools. Whether you're building an AI-powered IDE, enhancing a chat interface, or creating custom AI workflows, MCP provides a standardized way to connect LLMs with the context they need.

  This server provides cloud browser automation capabilities using [Browserbase](https://www.browserbase.com/) and [Stagehand](https://github.com/browserbase/stagehand). It enables LLMs to interact with web pages, take screenshots, extract information, and perform automated actions with atomic precision.

  ## Features

  | Feature            | Description                                                 |
  | ------------------ | ----------------------------------------------------------- |
  | Browser Automation | Control and orchestrate cloud browsers via Browserbase      |
  | Data Extraction    | Extract structured data from any webpage                    |
  | Web Interaction    | Navigate, click, and fill forms with ease                   |
  | Screenshots        | Capture full-page and element screenshots                   |
  | Model Flexibility  | Supports multiple models (OpenAI, Claude, Gemini, and more) |
  | Vision Support     | Use annotated screenshots for complex DOMs                  |
  | Session Management | Create, manage, and close browser sessions                  |
  | Multi-Session      | Run multiple browser sessions in parallel                   |

  ## Configuration

  ### Required Configuration

  - `BROWSERBASE_API_KEY`: Your Browserbase API key
  - `BROWSERBASE_PROJECT_ID`: Your Browserbase project ID
  - `GEMINI_API_KEY`: Your Gemini API key

  ### Resources

  The server provides access to screenshot resources:

  1. **Screenshots** (`screenshot://<screenshot-name>`)
    - PNG images of captured screenshots

  ## Key Features

  - **AI-Powered Automation**: Natural language commands for web interactions
  - **Multi-Model Support**: Works with OpenAI, Claude, Gemini, and more
  - **Advanced Session Management**: Single and multi-session support for parallel browser automation
  - **Screenshot Capture**: Full-page and element-specific screenshots
  - **Data Extraction**: Intelligent content extraction from web pages
  - **Proxy Support**: Enterprise-grade proxy capabilities
  - **Stealth Mode**: Advanced anti-detection features
  - **Context Persistence**: Maintain authentication and state across sessions
  - **Parallel Workflows**: Run multiple browser sessions simultaneously for complex automation tasks

  For more information about the Model Context Protocol, visit:

  - [MCP Documentation](https://modelcontextprotocol.io/docs)
  - [MCP Specification](https://spec.modelcontextprotocol.io/)

  For the official MCP Docs:

  - [Browserbase MCP](https://docs.browserbase.com/integrations/mcp/introduction)

metadata:
  categories: Automation & Browsers
icon: https://avatars.githubusercontent.com/u/158221360?v=4
repoURL: https://github.com/browserbase/mcp-server-browserbase/tree/main/browserbase
env:
  - key: BROWSERBASE_API_KEY
    name: Browserbase API Key
    required: true
    sensitive: true
    description: Your Browserbase API key.
  - key: BROWSERBASE_PROJECT_ID
    name: Browserbase Project ID
    required: true
    sensitive: false
    description: Your Browserbase project ID.
  - key: GEMINI_API_KEY
    name: Gemini API Key
    required: true
    sensitive: true
    description: Your Gemini API key.
runtime: npx
npxConfig:
  package: '@browserbasehq/mcp'
